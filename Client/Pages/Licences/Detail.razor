@page "/licences/detail/{id:int}/{paramName?}"
@using MoeSystem.Client.Pages.Licences.Components


@inject IHttpRepository<LicenceDetailDto> licenceService
@inject IHttpRepository<LicenceDocumentDetailDto> LicenceDocumentService
@inject IDialogService Dialog
@attribute [Authorize(Roles="Administrator,DetailLicenses")]

<div class="side-app">
					 <!-- CONTAINER -->
					 <div class="main-container container-fluid">
						<!-- PAGE-HEADER -->
						<div class="page-header">
								<div>
									<h1 class="page-title">Licence Detail </h1>
								</div>
								<div class="ms-auto pageheader-btn">
									<ol class="breadcrumb">
										<li class="breadcrumb-item">Home</li>
										<li class="breadcrumb-item"><a href="javascript:void(0);">Licence</a></li>
										<li class="breadcrumb-item active" aria-current="page">Detail</li>
									</ol>
								</div>
							</div>
        <div class="card">
            <div class="card-aside-wrap">
                <div class="card-content">
                    @if (loading)
                    {

                        <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />

                    }
                    else
                    {
                        <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6"
                        Color="@Color.Success">

                            <MudTabPanel Text="Licence" Icon="@Icons.Filled.AccountBox">

                                <LicenceDetail Licence="Licence" />
                                <div class="nk-block">





                                    <div class="nk-divider divider md"></div>
                                    <div class="nk-block">
                                    
                                    <div class="bq-note">
                                    
                                        <div class="bq-note-item">
                                                <div class="bq-note-text text-center">
                                                 
                                                                    @if(Licence.LicenceStatus=="Completed" && ParamName=="Completed"){

                                                                    <MudButton Variant="Variant.Filled" class="ml-1"
                                                        StartIcon="@Icons.Material.Filled.Print" Color="Color.Info" 
                                                        Href="@($"/print/printlicence/{Licence.Id}")" Target="_blank"> 
                                                                        Print Licence
                                                                    </MudButton>
                                                                    }   
                                                </div>

                                            </div><!-- .bq-note-item -->
                                    </div><!-- .bq-note -->
                                </div><!-- .nk-block -->
                                </div>


                            </MudTabPanel>
                            <MudTabPanel Text="Documents" Icon="@Icons.Filled.Article">

                                <LicenceDocuments LicenceId="Licence.Id" DialogOptions="maxWidth"
                                LicenceEventCallBack="GetLicence" />
                            </MudTabPanel>
                            <MudTabPanel Text="Cordinates" Icon="@Icons.Filled.LocationOn">

                                <LicenceCordinates LicenceId="Licence.Id" LicenceEventCallBack="GetLicence" />

                            </MudTabPanel>
                            <MudTabPanel Text="Comments" Icon="@Icons.Filled.InsertComment">

                                <LicenceComments LicenceId="Licence.Id" LicenceEventCallBack="GetLicence" />
                            </MudTabPanel>
                            <MudTabPanel Text="Workflow History" Icon="@Icons.Filled.AccessTimeFilled">

                                <LicenceWorkflows LicenceId="Licence.Id" LicenceEventCallBack="GetLicence" />
                            </MudTabPanel>
                            <MudTabPanel Text="Map Detail" Icon="@Icons.Filled.Map">
                                <MudText>Map Detail Here</MudText>

                            </MudTabPanel>
                            <MudTabPanel Text="Activities" Icon="@Icons.Filled.Psychology">
                                <LicenceLogs LicenceId="Licence.Id" />
                            </MudTabPanel>
                        </MudTabs>
                    }


                </div><!-- .card-content -->

            </div><!-- .card-aside-wrap -->
        </div><!-- .card -->
    </div><!-- .nk-block -->
</div>




@code {
    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public string? ParamName{get;set;}

    private LicenceDetailDto Licence = new LicenceDetailDto();

    protected async override Task OnParametersSetAsync()
    {

        await GetLicence();
    }



    private async Task GetLicence()
    {
        loading = true;
        Licence = await licenceService.Get($"{EndPoints.LicencesEndPoint}GetLicenceDetail/", Id);
        loading = false;
    }

    private bool loading = true;




    private string searchLicence = "";

    private LicenceDto selectedLicenceItem = null;


    DialogOptions maxWidth = new DialogOptions()
    {
        MaxWidth = MaxWidth.Medium,
        FullWidth = true,
        Position = DialogPosition.TopCenter,


    };











    private bool FilterLicence(LicenceDto element) => FilterLicence1(element, searchLicence);

    private bool FilterLicence1(LicenceDto element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.LicenceType.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Id.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }
}