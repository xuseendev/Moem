@page "/licences/search"
@inject IJSRuntime jsRuntime
@inject IDialogService Dialog
@inject IHttpRepository<LicenceDto> licenceService
@inject IHttpRepository<BaseLookUpDto> lookupService
@inject HttpInerceptorService _interceptor

@implements IDisposable

<div class="nk-content-body">
    <div class="nk-block-head nk-block-head-sm">
        <div class="nk-block-between">
            <div class="nk-block-head-content">
                <h3 class="nk-block-title page-title">Search Licences</h3>
            </div><!-- .nk-block-head-content -->
            <div class="nk-block-head-content">
                <div class="toggle-wrap nk-block-tools-toggle">
                    <a href="#" class="btn btn-icon btn-trigger toggle-expand me-n1" data-target="pageMenu"><em
                            class="icon ni ni-more-v"></em></a>
                    <div class="toggle-expand-content" data-content="pageMenu">
                        <ul class="nk-block-tools g-3">
                            <li>
                                <div class="drodown">
                                    <a href="#" class="dropdown-toggle btn btn-white btn-dim btn-outline-light"
                                        data-bs-toggle="dropdown"><em
                                            class="d-none d-sm-inline icon ni ni-calender-date"></em><span><span
                                                class="d-none d-md-inline">Import</span> Excel</span><em
                                            class="dd-indc icon ni ni-chevron-right"></em></a>
                                    <div class="dropdown-menu dropdown-menu-end">
                                        <ul class="link-list-opt no-bdr">
                                            <li><a href="#"><span>Last 30 Days</span></a></li>
                                            <li><a href="#"><span>Last 6 Months</span></a></li>
                                            <li><a href="#"><span>Last 1 Years</span></a></li>
                                        </ul>
                                    </div>
                                </div>
                            </li>
                            <li class="nk-block-tools-opt"><button @onclick="(()=>OpenCreateForm(null))"
                                    class="btn btn-primary"><em class="icon ni ni-plus"></em><span>Add
                                        Licence</span></button></li>

                        </ul>
                    </div>
                </div>
            </div><!-- .nk-block-head-content -->
        </div><!-- .nk-block-between -->
    <div class="card mt-3 border-0">
        <div class="card-body">
            <EditForm Model="SearchLicence" OnValidSubmit="LoadLicences">
                <div class="row g-2">
                    <div class="col-xxl-2 col-sm-6">
                        <div class="search-box">
                            <MudTextField Label="Licence Id" Variant="Variant.Outlined" @bind-Value="SearchLicence.LicenceId"
                                For="@(() => SearchLicence.LicenceId)" />
                        </div>
                    </div>
                    <div class="col-xxl-2 col-sm-6">
                        <div class="search-box">
             
                                       <MudSelect    Variant="Variant.Outlined"  Label="Licence Status" @bind-Value="SearchLicence.LicenceStatus" AnchorOrigin="Origin.BottomCenter">

                        @foreach (var status in LicenceStatus)
                        {

                            <MudSelectItem Value="@(status.Name)">@status.Name</MudSelectItem>


                        }
                    </MudSelect>
                        </div>
                    </div>
                    <div class="col-xxl-2 col-sm-6">
                        <div class="search-box">
                              <MudTextField  Label="Name" Variant="Variant.Outlined"
                                @bind-Value="SearchLicence.Name" For="@(() => SearchLicence.Name)" />
                        </div>
                    </div>

                    <div class="col-xxl-2 col-sm-6">
                        <div class="search-box">
                                             <MudDatePicker Label="Date From" @bind-Date="SearchLicence.From"  Variant="Variant.Outlined" For="@(() => SearchLicence.To)" />

                        </div>
                    </div>
                    <div class="col-xxl-2 col-sm-6">
                        <div class="search-box">
                                              <MudDatePicker Label="Date To" @bind-Date="SearchLicence.To" Variant="Variant.Outlined" For="@(() => SearchLicence.To)" />

                        </div>
                    </div>



                    <!--end col-->
                    <div class="col-xxl-2 col-sm-5">
                        <div>
                     <MudButton Color="Color.Inherit" ButtonType="ButtonType.Submit"  StartIcon="@Icons.Material.Filled.Search" Style="height: 60px;background-color:green;color:white;">
    Filter
</MudButton>
                        </div>
                    </div>
                    <!--end col-->
                </div>
                <!--end row-->
            </EditForm>
        </div>
    </div>
    </div><!-- .nk-block-head -->
    <div class="nk-block">
        <MudTable Loading="loading" Items="@Licences" Dense="true" Hover="@hover" Bordered="@bordered"
            Striped="@striped" @bind-SelectedItem="selectedItem1">
            <ToolBarContent>
                <MudText Typo="Typo.h6">List</MudText>
                <MudSpacer />

            </ToolBarContent>
            <HeaderContent>
                <MudTh>Id</MudTh>
                <MudTh>Licence #</MudTh>
                <MudTh>Company</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Mineral Type</MudTh>
                <MudTh>Start Date</MudTh>
                <MudTh>End Date</MudTh>
                <MudTh>Status</MudTh>
                <MudTh>CreatedBy</MudTh>
                <MudTh>CreatedOn</MudTh>
                <MudTh>Actions</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Nr">@context.Id</MudTd>
                <MudTd DataLabel="Region">@context.LicenceId</MudTd>
                <MudTd DataLabel="Name">@context.CompanyName</MudTd>
                <MudTd DataLabel="Name">@context.LicenceType</MudTd>
                <MudTd DataLabel="Name">@context.MineralType</MudTd>
                <MudTd DataLabel="Name">@context.LicenceStartDate.Value.ToShortDateString()</MudTd>
                <MudTd DataLabel="Name">@context.LicenceEndDate.ToShortDateString()</MudTd>
                <MudTd DataLabel="Name">@context.Status</MudTd>

                <MudTd DataLabel="CreatedBy">@context.CreatedBy</MudTd>
                <MudTd DataLabel="CreatedOn">@context.CreatedOn.ToShortDateString()</MudTd>
                <MudTd DataLabel="Actions">
                    <MudIconButton Icon="@Icons.Filled.RemoveRedEye" Variant="Variant.Outlined" Color="Color.Info"
                        Size="Size.Small" Href="@($"/licences/detail/{context.Id}")" Target="" />
              

                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>

    </div>
</div>


@code {



    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;
    private bool loading = true;
    private SearchLicenceDetailDto SearchLicence = new SearchLicenceDetailDto();
    private LicenceDto selectedItem1 = null;


    DialogOptions maxWidth = new DialogOptions()
    {
        MaxWidth = MaxWidth.Large,
        FullWidth = true,
        Position = DialogPosition.TopCenter,
        CloseOnEscapeKey = true
    };

    private async Task OpenCreateForm(int? id = null)
    {
        IDialogReference dialog;
        var parameters = new DialogParameters();
        if (id != null)
        {
            parameters.Add("Id", id.Value);
            parameters.Add("ButtonText", "Update Licence");
            dialog = Dialog.Show<Create>("Update Licence", parameters, maxWidth);
        }
        else
        {
            parameters.Add("ButtonText", "Register Licence");

            dialog = Dialog.Show<Create>("Add New Licence", parameters, maxWidth);
        }
        var result = await dialog.Result;
        await LoadLicences();

    }
    private List<LicenceDto> Licences = new List<LicenceDto>();
    private List<BaseLookUpDto> LicenceStatus=new List<BaseLookUpDto>();

    public async Task LoadLicences()
    {
        loading = true;
        _interceptor.MonitorEvent();
        Licences = await
        licenceService.GetAll($"{EndPoints.LicencesEndPoint}SearchLicence?licenceId={SearchLicence.LicenceId}&licenceStatus={SearchLicence.LicenceStatus}&from={SearchLicence.From}&to={SearchLicence.To}");
        loading = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadLicences();
        LicenceStatus=await lookupService.GetAll($"{EndPoints.LicenceStatusEndPoint}Lookup");
    }


    public void Dispose()
    {
        _interceptor.DisposeEvent();
    }


}
