@page "/auth/login"

@inject IAuthenticationService authService
@inject NavigationManager navigationManager
@layout EmptyLayout

<body class="ltr login-img" >



    <!-- PAGE -->
    <div class="page" style="background-color: white;">
        <div>
            <!-- CONTAINER OPEN -->
            <div class="container-login100">
                <div class="wrap-login100 p-0">
                    <div class="card-body">
            <div class="col col-login mx-auto text-center mb-5">
                <a href="javascript:void()" class="text-center">
                    <img src="images/som.png"
                        class="" alt="" style="width:70px; height:70px;">
                </a>
            </div>
                        <div class="login100-form validate-form">
                           <EditForm Model="LoginModel" OnValidSubmit="HandleLogin" >

                                    <DataAnnotationsValidator />
                            <span class="login100-form-title">
                                Login
                            </span>
                            <div class="wrap-input100 validate-input mb-5"
                                data-bs-validate="Valid email is required:
                                ex@abc.xyz">
                                 
                                           
                                <input class="input100 mb-2" @bind="LoginModel.Email" type="text" name="email"
                                    placeholder="Email">
                                     <ValidationMessage For="@(() => LoginModel.Email)" style="color:red" />
                                <span class="focus-input100"></span>
                                <span class="symbol-input100">
                                    <i class="zmdi zmdi-email"
                                        aria-hidden="true"></i>
                                </span>
                            </div>
                            <div class="wrap-input100 validate-input mb-5"
                                data-bs-validate="Password is required">
                                <input @bind="LoginModel.Password" class="input100" type="password"
                                    name="pass" placeholder="Password">
                                                          <ValidationMessage For="@(() => LoginModel.Password)"  style="color:red" />
                                <span class="focus-input100"></span>
                                <span class="symbol-input100">
                                    <i class="zmdi zmdi-lock"
                                        aria-hidden="true"></i>
                                </span>
                            </div>
                          
                         
                            <div class="text-end pt-1">
                                <p class="mb-0"><a href="javascript:void()"
                                        class="text-primary ms-1">Forgot
                                        Password?</a></p>
                            </div>
                            <div class="container-login100-form-btn">
                                <button type="submit" disabled="@Loading" class="login100-form-btn
                                    btn-primary">
                                     @if (Loading)
                                            {
                                                <div class="spinner-border" role="status">
                                                </div>
                                            }else{
                                                <span>Login</span>
                                            }
                                    
                                </button>
                            </div>
                            <br>
                           </EditForm>
</div>
                               @if (!string.IsNullOrEmpty(message))
                                    {

                                        <div class="alert alert-danger">
                                            <p>@message</p>
                                        </div>
                                    }
                    </div>

                </div>
            </div>
            <!-- CONTAINER CLOSED -->
        </div>
    </div>

    <!-- End PAGE -->

</body>
@code {
    private MoeSystem.Client.Services.Base.LoginDto LoginModel { get; set; } = new
        MoeSystem.Client.Services.Base.LoginDto();
    string message = string.Empty;
    private bool Loading { get; set; }
    private async Task HandleLogin()
    {
        Loading = true;
        try
        {
            var response = await authService.AuthenticateAsync(LoginModel);

            navigationManager.NavigateTo("/licenceworkflows/index");


        }
        catch (MoeSystem.Client.Services.Base.ApiException ex)
        {
            if (ex.StatusCode == 404)
            {
                message = "Invalid Credentials, Please Try Again";
                Loading = false;
                return;
            }
            else if (ex.StatusCode == 401)
            {
                message = "Invalid Credentials, Please Try Again";
                Loading = false;
                return;
            }
            message = ex.Message;
            //throw;
        }
        catch (Exception ex)
        {
            message = ex.Message;

        }
        Loading = false;
    }


}
