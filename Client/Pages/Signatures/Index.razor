@page "/signatures/index"
@inject IDialogService Dialog
@inject IJSRuntime jsRuntime
@inject IDialogService Dialog
@inject HttpInerceptorService _interceptor
@attribute [Authorize]

@implements IDisposable
@inject IHttpRepository<SignatureDto> signatureService
<div class="side-app">
					 <!-- CONTAINER -->
					 <div class="main-container container-fluid">
						<!-- PAGE-HEADER -->
						<div class="page-header">
								<div>
									<h1 class="page-title">Signatures</h1>
								</div>
								<div class="ms-auto pageheader-btn">
									<ol class="breadcrumb">
										<li class="breadcrumb-item">Home</li>
										<li class="breadcrumb-item"><a href="javascript:void(0);">Signatures</a></li>
										<li class="breadcrumb-item active" aria-current="page">List</li>
									</ol>
								</div>
							</div>
                              <div class="col-md-2 mb-3">
									<div class="btn-list">
										<a href="javascript:void()" class="btn btn-primary" @onclick="(()=>OpenCreateForm())">
											<svg xmlns="http://www.w3.org/2000/svg"  class="w-inner-icn text-white" enable-background="new 0 0 24 24" viewBox="0 0 24 24"><path d="M16,11.5h-3.5V8c0-0.276123-0.223877-0.5-0.5-0.5S11.5,7.723877,11.5,8v3.5H8c-0.276123,0-0.5,0.223877-0.5,0.5s0.223877,0.5,0.5,0.5h3.5v3.5005493C11.5001831,16.2765503,11.723999,16.5001831,12,16.5h0.0006104C12.2765503,16.4998169,12.5001831,16.276001,12.5,16v-3.5H16c0.276123,0,0.5-0.223877,0.5-0.5S16.276123,11.5,16,11.5z M12,2C6.4771729,2,2,6.4771729,2,12s4.4771729,10,10,10c5.5202026-0.0062866,9.9937134-4.4797974,10-10C22,6.4771729,17.5228271,2,12,2z M12,21c-4.9705811,0-9-4.0294189-9-9s4.0294189-9,9-9c4.9682617,0.0056152,8.9943848,4.0317383,9,9C21,16.9705811,16.9705811,21,12,21z"></path></svg>
											New Signature
										</a>
										
									</div>
								</div>
        <MudTable Loading="loading" Items="@Elements" Dense="true" Hover="@hover" Bordered="@bordered"
            Striped="@striped" Filter="new Func<SignatureDto,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1">
            <ToolBarContent>
                <MudText Typo="Typo.h6">List</MudText>
                <MudSpacer />
                <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start"
                    AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Id</MudTh>
                <MudTh>Name</MudTh>
                <MudTh>Title</MudTh>
                <MudTh>UserGroup</MudTh>
                <MudTh>CreatedBy</MudTh>
                <MudTh>CreatedOn</MudTh>
                <MudTh>Actions</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Nr">@context.Id</MudTd>
                <MudTd DataLabel="Sign">@context.Name</MudTd>
                <MudTd DataLabel="Sign">@context.Title</MudTd>
                <MudTd DataLabel="Sign">@context.UserGroup.Name</MudTd>
                <MudTd DataLabel="Position">@context.CreatedBy</MudTd>
                <MudTd DataLabel="Molar mass">@context.CreatedOn</MudTd>
                <MudTd DataLabel="Actions">
                    <MudIconButton class="mr-2" Icon="@Icons.Filled.RemoveRedEye"
                        @onclick="(()=>GetDocument(context.Id))"Variant="Variant.Outlined"
                        Color="Color.Primary" Size="Size.Small" />
                    <MudIconButton class="mr-2" Icon="@Icons.Material.Filled.Delete" Variant="Variant.Outlined" Color="Color.Error"
                        Size="Size.Small" />
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" Variant="Variant.Outlined" Color="Color.Warning"
                        Size="Size.Small" />

                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>

    </div>
</div>


@code {
    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;
    private bool loading = true;
    private string searchString1 = "";
    private SignatureDto selectedItem1 = null;
    private HashSet<SignatureDto> selectedItems = new HashSet<SignatureDto>();
    DialogOptions maxWidth = new DialogOptions()
    {
        MaxWidth = MaxWidth.Medium,
        FullWidth = true,
        Position = DialogPosition.TopCenter
    };

    private IEnumerable<SignatureDto> Elements = new List<SignatureDto>();

    protected override async Task OnInitializedAsync()
    {
        _interceptor.MonitorEvent();
        Elements = await signatureService.GetAll($"{EndPoints.SignatureEndPoint}");
        loading = false;
    }


    private void GetDocument(int id)
    {
        var parameters = new DialogParameters();
        parameters.Add("Id", id);
        var dialog = Dialog.Show<ShowImage>("Documents", parameters, new DialogOptions()
        {
            MaxWidth = MaxWidth.Large,
            FullWidth = true,
            Position = DialogPosition.TopCenter


        });

    }

    private void OpenCreateForm()
    {
        Dialog.Show<Create>("Add New MineralType", maxWidth);
    }

    private bool FilterFunc1(SignatureDto element) => FilterFunc(element, searchString1);

    private bool FilterFunc(SignatureDto element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Id.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }

    public void Dispose()
    {
        _interceptor.DisposeEvent();
    }
}
