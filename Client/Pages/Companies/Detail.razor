@page "/companies/detail/{id:int}"
@using Component
@attribute [Authorize]
@using MoeSystem.Client.Pages.Companies.Component

@inject IHttpRepository<CompanyDetailDto> companyService
@inject IHttpRepository<CompanyDocumentDetailDto> companyDocumentService
    @inject IDialogService Dialog
@attribute [Authorize(Roles="Administrator,DetailCompanies")]

  <div class="side-app">
					 <!-- CONTAINER -->
					 <div class="main-container container-fluid">
						<!-- PAGE-HEADER -->
						<div class="page-header">
								<div>
									<h1 class="page-title">Company-Details</h1>
								</div>
								<div class="ms-auto pageheader-btn">
									<ol class="breadcrumb">
										<li class="breadcrumb-item">Home</li>
										<li class="breadcrumb-item"><a href="javascript:void(0);">Company</a></li>
										<li class="breadcrumb-item active" aria-current="page">Company Details</li>
									</ol>
								</div>
							</div>
                     
						<!-- PAGE-HEADER END -->
                    <div class="card">
                        <div class="card-aside-wrap">
                            <div class="card-content">
                                    @if(loading){
                                    
<MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />

                                    }else{
                                <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">

                                    <MudTabPanel Text="Company" Icon="@Icons.Filled.AccountBox">
                                       <CompanyDetail Detail="Company"/>
                                    </MudTabPanel>
                                    <MudTabPanel Text="Documents" Icon="@Icons.Filled.Article">
                                       
                                        <CompanyDocuments CompanyId="Company.Id" CompanyEventCallBack="GetComany" DialogOptions="maxWidth"/>
                                    </MudTabPanel>
                                    <MudTabPanel Text="Ownerships" Icon="@Icons.Filled.SwitchAccount">

                                      
                                        <CompanyOwnerships CompanyId="Company.Id" CompanyEventCallBack="GetComany"/>
                                    </MudTabPanel>
                                    <MudTabPanel Text="Licences" Icon="@Icons.Filled.Payments">
                                        <MudButton Variant="Variant.Filled"  StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary">Add Licence</MudButton>

                                           <MudTable  Items="Company.Licences" Dense="true"
                                            Hover="true" Bordered="true" Striped="true"
                                            Filter="new Func<LicenceDto,bool>(FilterLicence)"
                                            @bind-SelectedItem="selectedLicenceItem">
                                            <ToolBarContent>
                                                <MudText Typo="Typo.h6">Licences</MudText>
                                                <MudSpacer />
                                                <MudTextField @bind-Value="searchLicence" Placeholder="Search"
                                                    Adornment="Adornment.Start"
                                                    AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium"
                                                    Class="mt-0"></MudTextField>
                                            </ToolBarContent>
                                            <HeaderContent>
                                                <MudTh>Id</MudTh>
                                                <MudTh>Licence id</MudTh>
                                                <MudTh>Type</MudTh>
                                                <MudTh>Start Date</MudTh>
                                                <MudTh>End Date</MudTh>
                                                <MudTh>Mineral Type</MudTh>
                                                <MudTh>Status</MudTh>
                                                <MudTh>CreatedOn</MudTh>
                                                <MudTh>Actions</MudTh>
                                            </HeaderContent>
                                            <RowTemplate>
                                                <MudTd DataLabel="Nr">@context.Id</MudTd>
                                                <MudTd DataLabel="Region">@context.LicenceId</MudTd>
                                                <MudTd DataLabel="Name">@context.LicenceType</MudTd>
                                                <MudTd DataLabel="Name">@context.LicenceStartDate.Value.ToShortDateString()</MudTd>
                                                <MudTd DataLabel="Name">@context.LicenceEndDate.ToShortDateString()</MudTd>
                                                <MudTd DataLabel="Name">@context.MineralType</MudTd>
                                                <MudTd DataLabel="Name">@context.Status</MudTd>

                          
                                                <MudTd DataLabel="CreatedOn">@context.CreatedOn</MudTd>
                                                <MudTd DataLabel="Actions">
                                                    <MudIconButton Icon="@Icons.Filled.RemoveRedEye" Href="@($"/licences/detail/{context.Id}")"
                                                        Variant="Variant.Outlined" Color="Color.Primary"
                                                        Size="Size.Small" />
                                                    

                                                </MudTd>
                                            </RowTemplate>
                                            <PagerContent>
                                                <MudTablePager />
                                            </PagerContent>
                                        </MudTable>
                                    </MudTabPanel>
                                       <MudTabPanel Text="Company Licence" Icon="@Icons.Filled.AccessTimeFilled">
                                            <MudButton Variant="Variant.Filled" @onclick="OpenLicenceForm" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary">Add Company Licence</MudButton>
                                        <CompanyLicences Company="Company" CompanyEventCallBack="GetComany"/>
                                    </MudTabPanel>
                                    <MudTabPanel Text="Activities" Icon="@Icons.Filled.Psychology">
                                       <CompanyLogs CompanyId="Company.Id"/>
                              
                                    </MudTabPanel>
                                </MudTabs>
                                    }


                            </div><!-- .card-content -->
                       
                        </div><!-- .card-aside-wrap -->
                    </div><!-- .card -->
                </div><!-- .nk-block -->
            </div>

   <div class="modal fade text-left " id="print-view-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel1" aria-hidden="true" style="display: none;">

                                                            <div class="modal-dialog modal-dialog-scrollable modal-xl" role="document">
                                                                <div class="modal-content">

                                                                    <div class="modal-header badge badge-info">
                                                                        <h4 class="modal-title" id="myModalLabel1">Documents</h4>

                                                                        <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
                                                                    </div>

                                                                    <div class="modal-body">
                                                                        <div class="input-group">
                                                                            <div id="pdf_files"></div>

                                                                        </div>
                                                                    </div>



                                                                </div>
                                                            </div>
                                                        </div>

@code {
    [Parameter]
    public int Id { get; set; }

    private CompanyDetailDto Company = new CompanyDetailDto();

    protected async override Task OnParametersSetAsync()
    {

        await GetComany();
    }

 

    private async Task GetComany(){
        loading=true;
        Company = await companyService.Get($"{EndPoints.CompaniesEndPoint}GetCompanyDetail/", Id);
        loading=false;
    }

    private bool loading=true;




    private string searchLicence = "";

    private LicenceDto selectedLicenceItem = null;


    DialogOptions maxWidth = new DialogOptions()
    {
        MaxWidth = MaxWidth.Medium,
        FullWidth = true,
        Position = DialogPosition.TopCenter,
        

    };

  

    
    private async Task OpenLicenceForm()
    {
        var parameters = new DialogParameters();
        parameters.Add("CompanyId", Company.Id);
        var dialog = Dialog.Show<CreateCompanyLicence>("Add New Company Licence", parameters, maxWidth);
        var result = await dialog.Result;
        await GetComany();
    }
    private bool FilterLicence(LicenceDto element) => FilterLicence1(element, searchLicence);

    private bool FilterLicence1(LicenceDto element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.LicenceType.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Id.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }
}