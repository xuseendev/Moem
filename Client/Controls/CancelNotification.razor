@inject IHttpRepository<LicenceWorkFlowDto> licenceWorkflowService
@inject HttpInerceptorService _interceptor
<li class="dropdown notification-dropdown">
    <a href="#" class="dropdown-toggle nk-quick-nav-icon" data-bs-toggle="dropdown">
        <div class="icon-status icon-status-info"><em class="icon ni ni-bell"></em></div>
    </a>
    <div class="dropdown-menu dropdown-menu-xl dropdown-menu-end">
        <div class="dropdown-head">
            <span class="sub-title nk-dropdown-title">Notifications</span>
            <a href="#">Mark All as Read</a>
        </div>
        <div class="dropdown-body">
            <div class="nk-notification">
                @foreach (var item in Workflows)
                {

                    <div class="nk-notification-item dropdown-inner">
                        <div class="nk-notification-icon">
                            <em class="icon icon-circle bg-warning-dim ni ni-curve-down-right"></em>
                        </div>
                        <div class="nk-notification-content">
                            <div class="nk-notification-text">@item.Licence.CompanyName</div>
                            <div class="nk-notification-time">2 hrs ago</div>
                        </div>
                    </div>
                }

            </div><!-- .nk-notification -->
        </div><!-- .nk-dropdown-body -->
        <div class="dropdown-foot center">
            <a href="#">View All</a>
        </div>
    </div>
</li>

@code {

    private List<LicenceWorkFlowDto> Workflows = new List<LicenceWorkFlowDto>();

    protected override async Task OnInitializedAsync()
    {
        _interceptor.MonitorEvent();
        Workflows = await licenceWorkflowService.GetAll($"{EndPoints.LicenceWorkflowEndPoint}RejectedLicence");

    }
}
